#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define NUM  2
#define FUN  3
#define SYM  4
#define MEDIA  5
#define BLU 6

/*                KEY POSITIONS

          ╭────────────────────╮ ╭────────────────────╮
          │  0   1   2   3   4 │ │  5   6   7   8   9 │
          │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
          │ 20  21  22  23  24 │ │ 25  26  27  28  29 │
          ╰───────╮ 30  31  32 │ │ 33  34  35 ╭───────╯
                  ╰────────────╯ ╰────────────╯        */

&mt {
    flavor = "balanced";
    retro-tap;
};

&lt {
    flavor = "balanced";
    retro-tap;
};

/ {
    combos {
        compatible = "zmk,combos";

        leftParet {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
            layers = <0>;
        };

        rightParet {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
            layers = <0>;
        };

        minusCombo {
            bindings = <&kp MINUS>;
            key-positions = <32 33>;
            layers = <0>;
        };

        capslock {
            bindings = <&caps_word>;
            key-positions = <4 5>;
            layers = <0>;
        };

        printscreen {
            bindings = <&kp LG(LS(N5))>;
            key-positions = <1 2 3>;
            layers = <0>;
            timeout-ms = <40>;
        };

        apost {
            bindings = <&kp APOSTROPHE>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        rht: repeatHoldTap {
            compatible = "zmk,behavior-hold-tap";
            label = "REPEATHOLDTAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <120>;
            quick-tap-ms = <200>;
            retro-tap;
        };
    };

    macros {
        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_0) &kp LA(NUMBER_1) &kp LA(NUMBER_2) &kp LA(N8)>;
            label = "EURO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&lt 1 Q             &lt 2 W      &kp E                &kp R         &kp T           &kp Y          &kp U         &kp I       &kp O                &kp P
&mt LEFT_CONTROL A  &mt LCTRL S  &mt LEFT_ALT D       &mt LSHIFT F  &mt G LEFT_GUI  &kp H          &mt LSHIFT J  &mt RALT K  &mt RIGHT_CONTROL L  &mt RIGHT_CONTROL SEMICOLON
&mt LEFT_SHIFT Z    &kp X        &kp C                &kp V         &kp B           &kp N          &kp M         &kp COMMA   &kp PERIOD           &mt RSHIFT SLASH
                                 &mt LEFT_ALT ESCAPE  &lt 11 TAB    &kp ENTER       &kp BACKSPACE  &kp SPACE     &kp DEL
            >;
        };

        q {
            bindings = <
&none   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans  &trans        &trans  &trans  &trans  &trans
                      &mo 13        &kp NUMBER_1  &trans  &trans        &trans  &trans
            >;
        };

        w {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        e {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        r {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        t {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        y {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        u {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        i {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        o {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        p {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&trans        &trans        &trans        &trans  &trans      &kp PRINTSCREEN  &trans             &none            &trans      &studio_unlock
&trans        &trans        &trans        &trans  &trans      &kp C_PREVIOUS   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &trans           &trans             &kp C_MUTE       &trans      &trans
                            &trans        &trans  &trans      &kp C_STOP       &kp C_PLAY_PAUSE   &kp K_MUTE
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        num {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0
&trans        &trans        &trans        &trans        &trans  &trans        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&trans        &trans        &trans        &trans        &trans  &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                            &trans        &trans        &trans  &trans        &kp N0        &kp E
            >;
        };
    };
};
